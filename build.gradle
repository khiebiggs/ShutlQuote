apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'com.github.node-gradle.node'

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/milestone' }
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath('io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE')
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE')
        classpath "com.github.node-gradle:gradle-node-plugin:2.2.3"
    }
}

configurations {
    runtimeLibs
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-test'
    // JAX-B dependencies so tests can run on JDK9+
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
}

springBoot {
    mainClass = "com.shutl.Application"
}

node {
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/frontend")
    args = ["install"]
}

task appTailwindBuild(type: NpxTask){
    description = "Builds the tailwind.css file needed for styling"
    workingDir = file("${project.projectDir}/src/main/frontend/src")
    command = "tailwindcss"
    args = ["build", "App.css", "-o", "tailwind.css"]
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src/main/frontend")
    args = ["run", "build"]
}

task copyWebApp(type: Copy) {
    from 'src/main/frontend/build'
    into 'build/resources/main/static/.'
}

appTailwindBuild.dependsOn(appNpmInstall)
appNpmBuild.dependsOn(appTailwindBuild)
copyWebApp.dependsOn(appNpmBuild)
compileJava.dependsOn(copyWebApp)

